{"version":3,"sources":["components/Search.jsx","components/PanellAdd.jsx","components/Menu/Menu.jsx","components/Item/Item.jsx","components/List/List.jsx","components/App/App.jsx","serviceWorker.js","index.js"],"names":["Search","onSearch","type","onChange","ev","query","target","value","toString","toLowerCase","trim","PanellAdd","onAdd","onHide","useState","title","setTitle","image","setImage","rating","setRating","className","onSubmit","preventDefault","name","parseInt","onClick","Menu","newItemPanel","setNewItemPanel","Item","id","onRemove","onUpdateRating","stars","state","setState","useEffect","Array","fill","src","process","width","map","star","index","key","console","log","List","items","item","initialState","App","books","setBooks","res","filter","includes","temp","length","push","findIndex","x","Boolean","window","location","hostname","match","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.df63c322.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Search = ({ onSearch }) => {\n  const onChangeEvent = (ev) => {\n    const query = ev.target.value.toString().toLowerCase().trim();\n    onSearch(query);\n  };\n\n  return <input type=\"text\" onChange={onChangeEvent} />;\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\n\nconst PanellAdd = ({ onAdd, onHide }) => {\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [rating, setRating] = useState(1);\n\n  const cancelAction = (ev) => {\n    onHide();\n  };\n\n  const onChangeTitle = (ev) => {\n    setTitle(ev.target.value);\n  };\n\n  const onChangeImage = (ev) => {\n    setImage(ev.target.value);\n  };\n\n  const onChangeRating = (ev) => {\n    const rating = parseInt(ev.target.value);\n    setRating(rating);\n  };\n\n  const createItem = (ev) => {\n    ev.preventDefault();\n    onAdd({ title, image, rating });\n    cancelAction();\n  };\n\n  return (\n    <div className=\"new-item-panel-container\">\n      <div className=\"new-item-panel\">\n        <form onSubmit={createItem}>\n          <p>\n            <label>Título del libro</label>\n            <br />\n            <input\n              type=\"text\"\n              name=\"title\"\n              className=\"input\"\n              onChange={onChangeTitle}\n            />\n          </p>\n\n          <p>\n            <label>Nombre de imagen</label>\n            <br />\n            <input\n              type=\"text\"\n              name=\"image\"\n              className=\"input\"\n              onChange={onChangeImage}\n            />\n          </p>\n\n          <p>\n            <label>Calificación</label>\n            <br />\n            <select onChange={onChangeRating}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </select>\n          </p>\n          <input\n            type=\"submit\"\n            className=\"button btn-blue\"\n            value=\"Registrar libro\"\n          />\n          <button className=\"button btn-normal\" onClick={onHide}>\n            Cancelar\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default PanellAdd;\n","import React, { useState } from \"react\";\nimport \"./Menu.css\";\nimport Search from \"../Search\";\nimport PanelAdd from \"../PanellAdd\";\n\nconst Menu = ({ title, onSearch, onAdd }) => {\n  const [newItemPanel, setNewItemPanel] = useState(false);\n\n  const add = () => {\n    setNewItemPanel(true);\n  };\n\n  const onCancel = () => {\n    setNewItemPanel(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"subcontainer\">\n        <div className=\"logo\">{title}</div>\n        <div className=\"search\">\n          <Search onSearch={onSearch} />\n        </div>\n        <div className=\"actions\">\n          <button onClick={add} className=\"button btn-blue\">\n            + Añadir nuevo libro\n          </button>\n        </div>\n      </div>\n      {newItemPanel ? <PanelAdd onHide={onCancel} onAdd={onAdd} /> : \"\"}\n    </div>\n  );\n};\n\nexport default Menu;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Items.css\";\n\nconst Item = ({ id, title, image, rating, onRemove, onUpdateRating }) => {\n  const [state, setState] = useState({\n    id: null,\n    title: \"\",\n    image: \"\",\n    rating: 1,\n    stars: [],\n  });\n\n  useEffect(() => {\n    setState({\n      id,\n      title,\n      image,\n      rating: parseInt(rating),\n      stars: Array(parseInt(rating)).fill(1),\n    });\n  }, [id, title, image, rating]);\n\n  const handleClick = (ev) => {\n    console.log(id);\n    onRemove(id);\n  };\n\n  const handleChangeRating = (ev) => {\n    const rating = parseInt(ev.target.value);\n\n    setState({\n      ...state,\n      rating,\n      stars: Array(rating).fill(1),\n    });\n\n    onUpdateRating({\n      id: state.id,\n      title: state.title,\n      image: state.image,\n      rating: rating,\n    });\n  };\n\n  return (\n    <div className=\"item\">\n      <div className=\"image\">\n        <img\n          src={process.env.PUBLIC_URL + \"/img/\" + state.image}\n          width=\"100%\"\n        />\n      </div>\n      <div className=\"title\">{state.title}</div>\n      <div className=\"rating\">\n        <p>\n          {state.stars.map((star, index) => (\n            <img\n              src={process.env.PUBLIC_URL + \"/img/star.png\"}\n              width=\"32\"\n              key={index}\n            />\n          ))}\n        </p>\n        Calificación:\n        <select value={state.rating} onChange={handleChangeRating}>\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n        </select>\n      </div>\n      <div className=\"actions\">\n        <button onClick={handleClick}>Eliminar</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport \"./List.css\";\nimport Item from \"../Item/Item\";\n\nconst List = ({ items, onRemove, onUpdateRating }) => (\n  <div className=\"list\">\n    {items.map((item) => (\n      <Item\n        key={item.id}\n        id={item.id}\n        title={item.title}\n        image={item.image}\n        rating={item.rating}\n        onRemove={onRemove}\n        onUpdateRating={onUpdateRating}\n      />\n    ))}\n  </div>\n);\n\nexport default List;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Menu from \"../Menu/Menu\";\nimport List from \"../List/List\";\n\nconst initialState = [\n  {\n    id: 0,\n    rating: 4,\n    title: \"Harry Potter y el cáliz de fuego\",\n    image: \"libro01.jpg\",\n  },\n  {\n    id: 1,\n    rating: 3,\n    title: \"The shining\",\n    image: \"libro02.jpg\",\n  },\n  { id: 2, rating: 5, title: \"Código Da Vinci\", image: \"libro03.jpg\" },\n  { id: 3, rating: 5, title: \"El principito\", image: \"libro04.jpg\" },\n  { id: 4, rating: 5, title: \"Sobrenatural\", image: \"libro05.jpg\" },\n];\n\nfunction App() {\n  const [books, setBooks] = useState(initialState);\n\n  const onSearch = (query) => {\n    if (query === \"\") {\n      setBooks(initialState);\n    } else {\n      const temp = [...books];\n      let res = temp.filter((item) => item.title.toLowerCase().includes(query));\n      setBooks(res);\n    }\n  };\n\n  const addItem = (item) => {\n    let temp = [...books];\n    const id = temp[temp.length - 1].id + 1;\n\n    item[\"id\"] = id;\n    temp.push(item);\n\n    setBooks(temp);\n  };\n\n  const remove = (id) => {\n    let temp = [...books];\n    const res = temp.filter((item) => item.id !== id);\n    setBooks(res);\n  };\n\n  const updateRating = (item) => {\n    let temp = [...books];\n    const index = temp.findIndex((x) => x.id === item.id);\n\n    temp[index].title = item.title;\n    temp[index].image = item.image;\n    temp[index].rating = item.rating;\n\n    setBooks(temp);\n  };\n\n  return (\n    <div className=\"app\">\n      <Menu title=\"Book Store\" onSearch={onSearch} onAdd={addItem} />\n      <List\n        className=\"list\"\n        items={books}\n        onRemove={remove}\n        onUpdateRating={updateRating}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}