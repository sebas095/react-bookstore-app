{"version":3,"sources":["components/Search.jsx","components/PanellAdd.jsx","components/Menu/Menu.jsx","components/Item/Item.jsx","components/List/List.jsx","components/App/App.jsx","serviceWorker.js","index.js"],"names":["Search","forwardRef","ref","onSearch","type","onChange","ev","query","target","value","toString","toLowerCase","trim","PanellAdd","onAdd","onHide","useState","title","setTitle","image","setImage","rating","setRating","className","onSubmit","preventDefault","name","parseInt","onClick","Menu","newItemPanel","setNewItemPanel","Item","id","onRemove","onUpdateRating","src","process","width","Array","fill","map","star","index","key","console","log","List","items","length","item","style","margin","display","textAlign","initialState","App","books","setBooks","copyBooks","setCopyBooks","inputSearch","useRef","useEffect","temp","current","res","filter","includes","push","findIndex","x","Boolean","window","location","hostname","match","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.346c9f66.chunk.js","sourcesContent":["import React, { forwardRef } from \"react\";\n\nconst Search = forwardRef(({ onSearch }, ref) => {\n  const onChangeEvent = (ev) => {\n    const query = ev.target.value.toString().toLowerCase().trim();\n    onSearch(query);\n  };\n\n  return <input type=\"text\" ref={ref} onChange={onChangeEvent} />;\n});\n\nexport default Search;\n","import React, { useState } from \"react\";\n\nconst PanellAdd = ({ onAdd, onHide }) => {\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [rating, setRating] = useState(1);\n\n  const cancelAction = (ev) => {\n    onHide();\n  };\n\n  const onChangeTitle = (ev) => {\n    setTitle(ev.target.value);\n  };\n\n  const onChangeImage = (ev) => {\n    setImage(ev.target.value);\n  };\n\n  const onChangeRating = (ev) => {\n    const rating = parseInt(ev.target.value);\n    setRating(rating);\n  };\n\n  const createItem = (ev) => {\n    ev.preventDefault();\n    onAdd({ title, image, rating });\n    cancelAction();\n  };\n\n  return (\n    <div className=\"new-item-panel-container\">\n      <div className=\"new-item-panel\">\n        <form onSubmit={createItem}>\n          <p>\n            <label>Título del libro</label>\n            <br />\n            <input\n              type=\"text\"\n              name=\"title\"\n              className=\"input\"\n              onChange={onChangeTitle}\n            />\n          </p>\n\n          <p>\n            <label>Nombre de imagen</label>\n            <br />\n            <input\n              type=\"text\"\n              name=\"image\"\n              className=\"input\"\n              onChange={onChangeImage}\n            />\n          </p>\n\n          <p>\n            <label>Calificación</label>\n            <br />\n            <select onChange={onChangeRating}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </select>\n          </p>\n          <input\n            type=\"submit\"\n            className=\"button btn-blue\"\n            value=\"Registrar libro\"\n          />\n          <button className=\"button btn-normal\" onClick={onHide}>\n            Cancelar\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default PanellAdd;\n","import React, { useState, forwardRef } from \"react\";\nimport \"./Menu.css\";\nimport Search from \"../Search\";\nimport PanelAdd from \"../PanellAdd\";\n\nconst Menu = forwardRef(({ title, onSearch, onAdd }, ref) => {\n  const [newItemPanel, setNewItemPanel] = useState(false);\n\n  const add = () => {\n    setNewItemPanel(true);\n  };\n\n  const onCancel = () => {\n    setNewItemPanel(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"subcontainer\">\n        <div className=\"logo\">{title}</div>\n        <div className=\"search\">\n          <Search onSearch={onSearch} ref={ref} />\n        </div>\n        <div className=\"actions\">\n          <button onClick={add} className=\"button btn-blue\">\n            + Añadir nuevo libro\n          </button>\n        </div>\n      </div>\n      {newItemPanel ? <PanelAdd onHide={onCancel} onAdd={onAdd} /> : \"\"}\n    </div>\n  );\n});\n\nexport default Menu;\n","import React from \"react\";\nimport \"./Items.css\";\n\nconst Item = ({ id, title, image, rating, onRemove, onUpdateRating }) => {\n  const handleClick = (ev) => {\n    console.log(id);\n    onRemove(id);\n  };\n\n  const handleChangeRating = (ev) => {\n    const rating = parseInt(ev.target.value);\n\n    onUpdateRating({\n      id,\n      title,\n      image,\n      rating,\n    });\n  };\n\n  return (\n    <div className=\"item\">\n      <div className=\"image\">\n        <img src={process.env.PUBLIC_URL + \"/img/\" + image} width=\"100%\" />\n      </div>\n      <div className=\"title\">{title}</div>\n      <div className=\"rating\">\n        <p>\n          {[...Array(rating).fill(0)].map((star, index) => (\n            <img\n              src={process.env.PUBLIC_URL + \"/img/star.png\"}\n              width=\"32\"\n              key={index}\n            />\n          ))}\n        </p>\n        Calificación:\n        <select value={rating} onChange={handleChangeRating}>\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n        </select>\n      </div>\n      <div className=\"actions\">\n        <button onClick={handleClick}>Eliminar</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport \"./List.css\";\nimport Item from \"../Item/Item\";\n\nconst List = ({ items, onRemove, onUpdateRating }) => (\n  <div className=\"list\">\n    {items.length > 0 ? (\n      items.map((item) => (\n        <Item\n          key={item.id}\n          id={item.id}\n          title={item.title}\n          image={item.image}\n          rating={item.rating}\n          onRemove={onRemove}\n          onUpdateRating={onUpdateRating}\n        />\n      ))\n    ) : (\n      <div\n        style={{\n          margin: \"100px auto 0\",\n          display: \"inline-block\",\n          width: \"100%\",\n          textAlign: \"center\",\n        }}\n      >\n        <h3>No se encontraron resultados...</h3>\n      </div>\n    )}\n  </div>\n);\n\nexport default List;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport Menu from \"../Menu/Menu\";\nimport List from \"../List/List\";\n\nconst initialState = [\n  {\n    id: 0,\n    rating: 4,\n    title: \"Harry Potter y el cáliz de fuego\",\n    image: \"libro01.jpg\",\n  },\n  {\n    id: 1,\n    rating: 3,\n    title: \"The shining\",\n    image: \"libro02.jpg\",\n  },\n  { id: 2, rating: 5, title: \"Código Da Vinci\", image: \"libro03.jpg\" },\n  { id: 3, rating: 5, title: \"El principito\", image: \"libro04.jpg\" },\n  { id: 4, rating: 5, title: \"Sobrenatural\", image: \"libro05.jpg\" },\n];\n\nfunction App() {\n  const [books, setBooks] = useState(initialState);\n  const [copyBooks, setCopyBooks] = useState(initialState);\n  const inputSearch = useRef(null);\n\n  const onSearch = (query) => {\n    if (query === \"\") {\n      setCopyBooks([...books]);\n    } else {\n      const temp = [...books];\n      let res = temp.filter((item) =>\n        item.title.toLowerCase().trim().includes(query)\n      );\n      setCopyBooks(res);\n    }\n  };\n\n  useEffect(() => {\n    const temp = [...books];\n    if (inputSearch.current.value.trim() !== \"\") {\n      const query = inputSearch.current.value.trim();\n      let res = temp.filter((item) =>\n        item.title.toLowerCase().trim().includes(query)\n      );\n      setCopyBooks(res);\n    } else setCopyBooks(temp);\n  }, [books]);\n\n  const addItem = (item) => {\n    let temp = [...books];\n    const id = temp[temp.length - 1].id + 1;\n\n    item[\"id\"] = id;\n    temp.push(item);\n\n    setBooks(temp);\n  };\n\n  const remove = (id) => {\n    let temp = [...books];\n    const res = temp.filter((item) => item.id !== id);\n\n    setBooks(res);\n  };\n\n  const updateRating = (item) => {\n    let temp = [...books];\n    const index = temp.findIndex((x) => x.id === item.id);\n\n    temp[index].title = item.title;\n    temp[index].image = item.image;\n    temp[index].rating = item.rating;\n\n    setBooks(temp);\n    setCopyBooks(temp);\n  };\n\n  return (\n    <div className=\"app\">\n      <Menu\n        title=\"Book Store\"\n        ref={inputSearch}\n        onSearch={onSearch}\n        onAdd={addItem}\n      />\n      <List\n        className=\"list\"\n        items={copyBooks}\n        onRemove={remove}\n        onUpdateRating={updateRating}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}